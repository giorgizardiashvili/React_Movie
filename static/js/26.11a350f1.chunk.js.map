{"version":3,"file":"static/js/26.11a350f1.chunk.js","mappings":"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","sources":["api/omdb.js","components/MovieCard.js","hooks/useLocalStorage.js","pages/Favorites.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_OMDB_API_KEY;\r\nconst BASE_URL = 'https://www.omdbapi.com/';\r\n\r\nexport default {\r\n  searchMovies: (query) => axios.get(BASE_URL, {\r\n    params: {\r\n      apikey: API_KEY,\r\n      s: query,\r\n      type: 'movie'\r\n    }\r\n  }),\r\n  getMovieDetails: (id) => axios.get(BASE_URL, {\r\n    params: {\r\n      apikey: API_KEY,\r\n      i: id\r\n    }\r\n  })\r\n};","import { motion } from 'framer-motion';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useFavorites } from '../hooks/useLocalStorage';\r\nimport { FaStar } from 'react-icons/fa';\r\n\r\nexport default function MovieCard({ movie }) {\r\n  const navigate = useNavigate();\r\n  const [favorites, toggleFavorite] = useFavorites();\r\n  const isFavorite = favorites.includes(movie.imdbID);\r\n\r\n  return (\r\n    <motion.div \r\n      className=\"movie-card\"\r\n      onClick={() => navigate(`/movie/${movie.imdbID}`)}\r\n      whileHover={{ scale: 1.03 }}\r\n    >\r\n      <img\r\n        src={movie.Poster !== 'N/A' ? movie.Poster : 'https://via.placeholder.com/300x450?text=No+Poster'}\r\n        alt={movie.Title}\r\n        className=\"movie-poster\"\r\n      />\r\n      <div className=\"card-footer\">\r\n        <h3 className=\"movie-title\">{movie.Title}</h3>\r\n        <div className=\"card-actions\">\r\n          <span className=\"movie-year\">{movie.Year}</span>\r\n          <button \r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              toggleFavorite(movie.imdbID);\r\n            }}\r\n            className={`favorite-btn ${isFavorite ? 'active' : ''}`}\r\n          >\r\n            <FaStar />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\n\r\nexport function useLocalStorage(key, initialValue) {\r\n  const [value, setValue] = useState(() => {\r\n    const storedValue = localStorage.getItem(key);\r\n    return storedValue ? JSON.parse(storedValue) : initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n}\r\n\r\nexport const useFavorites = () => {\r\n  const [favorites, setFavorites] = useLocalStorage('favorites', []);\r\n  \r\n  const toggleFavorite = (movieId) => {\r\n    setFavorites(prev => \r\n      prev.includes(movieId) \r\n        ? prev.filter(id => id !== movieId) \r\n        : [...prev, movieId]\r\n    );\r\n  };\r\n\r\n  return [favorites, toggleFavorite];\r\n};","import { useEffect, useState } from 'react';\r\nimport omdbApi from '../api/omdb';\r\nimport MovieCard from '../components/MovieCard';\r\nimport Loader from '../components/Loader';\r\nimport { useFavorites } from '../hooks/useLocalStorage';\r\n\r\nexport default function Favorites() {\r\n  const [favorites] = useFavorites();\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadFavorites = async () => {\r\n      try {\r\n        const promises = favorites.map(id => omdbApi.getMovieDetails(id));\r\n        const responses = await Promise.all(promises);\r\n        setMovies(responses.map(r => r.data));\r\n      } catch (error) {\r\n        console.error('Error loading favorites:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (favorites.length > 0) loadFavorites();\r\n    else setLoading(false);\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <div className=\"page favorites-page\">\r\n      <h1 className=\"page-title\">Favorite Movies</h1>\r\n      \r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"movies-results\">\r\n          {movies.length > 0 ? (\r\n            <div className=\"movies-grid\">\r\n              {movies.map(movie => <MovieCard key={movie.imdbID} movie={movie} />)}\r\n            </div>\r\n          ) : (\r\n            <p className=\"no-results centered-message\">No favorite movies yet. Start adding some!</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":["API_KEY","process","BASE_URL","searchMovies","query","axios","get","params","apikey","s","type","getMovieDetails","id","i","MovieCard","_ref","movie","navigate","useNavigate","favorites","toggleFavorite","useFavorites","isFavorite","includes","imdbID","_jsxs","motion","div","className","onClick","concat","whileHover","scale","children","_jsx","src","Poster","alt","Title","Year","e","stopPropagation","FaStar","setFavorites","key","initialValue","value","setValue","useState","storedValue","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","useLocalStorage","movieId","prev","filter","Favorites","movies","setMovies","loading","setLoading","length","async","promises","map","omdbApi","responses","Promise","all","r","data","error","console","loadFavorites","Loader"],"sourceRoot":""}