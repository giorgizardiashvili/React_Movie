{"version":3,"file":"static/js/860.ce552d9d.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(element, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.0.11\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.0.11\", `Attempting to mix Motion versions ${nextValue.version} with 12.0.11 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","_objectWithoutProperties","e","t","o","r","i","n","hasOwnProperty","call","indexOf","Object","getOwnPropertySymbols","length","propertyIsEnumerable","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","concat","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","_objectSpread","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","filterEvents","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","noop","any","transformPropOrder","transformProps","positionalKeys","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","schedule","queue","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","push","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","prototype","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","updateDimensions","createDomVisualElement","motion"],"sourceRoot":""}