{"version":3,"file":"static/js/351.55cc0093.chunk.js","mappings":"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","sources":["api/omdb.js","hooks/useLocalStorage.js","pages/Movie.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_OMDB_API_KEY;\r\nconst BASE_URL = 'https://www.omdbapi.com/';\r\n\r\nexport default {\r\n  searchMovies: (query) => axios.get(BASE_URL, {\r\n    params: {\r\n      apikey: API_KEY,\r\n      s: query,\r\n      type: 'movie'\r\n    }\r\n  }),\r\n  getMovieDetails: (id) => axios.get(BASE_URL, {\r\n    params: {\r\n      apikey: API_KEY,\r\n      i: id\r\n    }\r\n  })\r\n};","import { useState, useEffect } from 'react';\r\n\r\nexport function useLocalStorage(key, initialValue) {\r\n  const [value, setValue] = useState(() => {\r\n    const storedValue = localStorage.getItem(key);\r\n    return storedValue ? JSON.parse(storedValue) : initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n}\r\n\r\nexport const useFavorites = () => {\r\n  const [favorites, setFavorites] = useLocalStorage('favorites', []);\r\n  \r\n  const toggleFavorite = (movieId) => {\r\n    setFavorites(prev => \r\n      prev.includes(movieId) \r\n        ? prev.filter(id => id !== movieId) \r\n        : [...prev, movieId]\r\n    );\r\n  };\r\n\r\n  return [favorites, toggleFavorite];\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport omdbApi from '../api/omdb';\r\nimport { useFavorites } from '../hooks/useLocalStorage';\r\nimport { FaStar } from 'react-icons/fa';\r\nimport Loader from '../components/Loader';\r\n\r\nexport default function Movie() {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [favorites, toggleFavorite] = useFavorites();\r\n  const isFavorite = favorites.includes(id);\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        const response = await omdbApi.getMovieDetails(id);\r\n        setMovie(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching movie:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovie();\r\n  }, [id]);\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <div className=\"page movie-page\">\r\n      <div className=\"movie-header\">\r\n        <img\r\n          src={movie.Poster !== 'N/A' ? movie.Poster : '/placeholder.jpg'}\r\n          alt={movie.Title}\r\n        />\r\n        <div className=\"movie-info\">\r\n          <h1>{movie.Title} ({movie.Year})</h1>\r\n          <p className=\"genre\">{movie.Genre}</p>\r\n          <div className=\"action-bar\">\r\n            <button\r\n              className={`favorite ${isFavorite ? 'active' : ''}`}\r\n              onClick={() => toggleFavorite(id)}\r\n            >\r\n              <FaStar /> {isFavorite ? 'Remove from Favorites' : 'Add to Favorites'}\r\n            </button>\r\n          </div>\r\n          <p className=\"plot\">{movie.Plot}</p>\r\n          <div className=\"details-grid\">\r\n            <div><span>Director:</span> {movie.Director}</div>\r\n            <div><span>Actors:</span> {movie.Actors}</div>\r\n            <div><span>Runtime:</span> {movie.Runtime}</div>\r\n            <div><span>IMDB Rating:</span> {movie.imdbRating}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["API_KEY","process","BASE_URL","searchMovies","query","axios","get","params","apikey","s","type","getMovieDetails","id","i","useFavorites","favorites","setFavorites","key","initialValue","value","setValue","useState","storedValue","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","useLocalStorage","movieId","prev","includes","filter","Movie","useParams","movie","setMovie","loading","setLoading","toggleFavorite","isFavorite","async","response","omdbApi","data","error","console","fetchMovie","_jsx","Loader","className","children","_jsxs","src","Poster","alt","Title","Year","Genre","concat","onClick","FaStar","Plot","Director","Actors","Runtime","imdbRating"],"sourceRoot":""}